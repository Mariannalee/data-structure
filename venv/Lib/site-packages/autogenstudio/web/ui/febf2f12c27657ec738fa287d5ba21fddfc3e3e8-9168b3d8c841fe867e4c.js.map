{"version":3,"file":"febf2f12c27657ec738fa287d5ba21fddfc3e3e8-9168b3d8c841fe867e4c.js","mappings":"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","sources":["webpack://autogentstudio/./node_modules/antd/es/_util/hooks/useClosable.js","webpack://autogentstudio/./node_modules/antd/es/grid/style/index.js","webpack://autogentstudio/./node_modules/antd/es/_util/ActionButton.js","webpack://autogentstudio/./node_modules/antd/es/modal/context.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/ConfirmCancelBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/ConfirmOkBtn.js","webpack://autogentstudio/./node_modules/rc-dialog/es/context.js","webpack://autogentstudio/./node_modules/rc-dialog/es/util.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/MemoChildren.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/Panel.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Content/index.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/Mask.js","webpack://autogentstudio/./node_modules/rc-dialog/es/Dialog/index.js","webpack://autogentstudio/./node_modules/rc-dialog/es/DialogWrap.js","webpack://autogentstudio/./node_modules/rc-dialog/es/index.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/NormalCancelBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/components/NormalOkBtn.js","webpack://autogentstudio/./node_modules/antd/es/modal/shared.js","webpack://autogentstudio/./node_modules/antd/es/modal/style/index.js","webpack://autogentstudio/./node_modules/antd/es/modal/Modal.js","webpack://autogentstudio/./node_modules/antd/es/_util/styleChecker.js","webpack://autogentstudio/./node_modules/antd/es/modal/style/confirm.js","webpack://autogentstudio/./node_modules/antd/es/modal/ConfirmDialog.js","webpack://autogentstudio/./node_modules/antd/es/modal/destroyFns.js","webpack://autogentstudio/./node_modules/antd/es/modal/confirm.js","webpack://autogentstudio/./node_modules/antd/es/modal/PurePanel.js","webpack://autogentstudio/./node_modules/antd/es/modal/useModal/HookModal.js","webpack://autogentstudio/./node_modules/antd/es/modal/useModal/index.js","webpack://autogentstudio/./node_modules/antd/es/_util/hooks/usePatchElement.js","webpack://autogentstudio/./node_modules/antd/es/modal/index.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Element.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/style/index.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Avatar.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Button.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Image.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Input.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Node.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Paragraph.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Title.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/Skeleton.js","webpack://autogentstudio/./node_modules/antd/es/skeleton/index.js","webpack://autogentstudio/./node_modules/antd/es/style/motion/fade.js","webpack://autogentstudio/./node_modules/antd/es/watermark/context.js","webpack://autogentstudio/./node_modules/extend/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://autogentstudio/./node_modules/property-information/lib/util/schema.js","webpack://autogentstudio/./node_modules/property-information/lib/util/merge.js","webpack://autogentstudio/./node_modules/property-information/lib/normalize.js","webpack://autogentstudio/./node_modules/property-information/lib/util/info.js","webpack://autogentstudio/./node_modules/property-information/lib/util/types.js","webpack://autogentstudio/./node_modules/property-information/lib/util/defined-info.js","webpack://autogentstudio/./node_modules/property-information/lib/util/create.js","webpack://autogentstudio/./node_modules/property-information/lib/xlink.js","webpack://autogentstudio/./node_modules/property-information/lib/xml.js","webpack://autogentstudio/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://autogentstudio/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://autogentstudio/./node_modules/property-information/lib/xmlns.js","webpack://autogentstudio/./node_modules/property-information/lib/aria.js","webpack://autogentstudio/./node_modules/property-information/lib/html.js","webpack://autogentstudio/./node_modules/property-information/lib/svg.js","webpack://autogentstudio/./node_modules/property-information/index.js","webpack://autogentstudio/./node_modules/property-information/lib/find.js","webpack://autogentstudio/./node_modules/property-information/lib/hast-to-react.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://autogentstudio/./node_modules/comma-separated-tokens/index.js","webpack://autogentstudio/./node_modules/space-separated-tokens/index.js","webpack://autogentstudio/./node_modules/html-url-attributes/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://autogentstudio/./node_modules/micromark-util-chunked/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-subtokenize/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-combine-extensions/index.js","webpack://autogentstudio/./node_modules/micromark-factory-space/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-factory-space/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/content.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/document.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/content.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/flow.js","webpack://autogentstudio/./node_modules/micromark/lib/initialize/text.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/list.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-destination/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-label/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-title/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-factory-whitespace/index.js","webpack://autogentstudio/./node_modules/micromark-util-normalize-identifier/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/definition.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-util-html-tag-name/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://autogentstudio/./node_modules/decode-named-character-reference/index.dom.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://autogentstudio/./node_modules/micromark-util-resolve-all/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://autogentstudio/./node_modules/micromark-util-classify-character/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-util-classify-character/index.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/attention.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://autogentstudio/./node_modules/micromark/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://autogentstudio/./node_modules/micromark/lib/constructs.js","webpack://autogentstudio/./node_modules/micromark/lib/create-tokenizer.js","webpack://autogentstudio/./node_modules/micromark/lib/parse.js","webpack://autogentstudio/./node_modules/micromark/lib/preprocess.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/micromark-util-decode-string/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://autogentstudio/./node_modules/micromark/lib/postprocess.js","webpack://autogentstudio/./node_modules/remark-parse/lib/index.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/types.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://autogentstudio/./node_modules/@ungap/structured-clone/esm/index.js","webpack://autogentstudio/./node_modules/micromark-util-sanitize-uri/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-util-sanitize-uri/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://autogentstudio/./node_modules/unist-util-visit-parents/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/unist-util-visit-parents/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://autogentstudio/./node_modules/trim-lines/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/state.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-hast/lib/index.js","webpack://autogentstudio/./node_modules/remark-rehype/lib/index.js","webpack://autogentstudio/./node_modules/bail/index.js","webpack://autogentstudio/./node_modules/is-plain-obj/index.js","webpack://autogentstudio/./node_modules/trough/lib/index.js","webpack://autogentstudio/./node_modules/vfile/node_modules/unist-util-stringify-position/lib/index.js","webpack://autogentstudio/./node_modules/vfile/node_modules/vfile-message/lib/index.js","webpack://autogentstudio/./node_modules/vfile/lib/minpath.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/minproc.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/minurl.shared.js","webpack://autogentstudio/./node_modules/vfile/lib/minurl.browser.js","webpack://autogentstudio/./node_modules/vfile/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/lib/index.js","webpack://autogentstudio/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/ccount/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://autogentstudio/./node_modules/markdown-table/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/encode-info.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/node_modules/unist-util-visit/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://autogentstudio/./node_modules/mdast-util-phrasing/node_modules/unist-util-is/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-phrasing/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://autogentstudio/./node_modules/longest-streak/index.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://autogentstudio/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm/node_modules/micromark-util-combine-extensions/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://autogentstudio/./node_modules/micromark-extension-gfm/index.js","webpack://autogentstudio/./node_modules/remark-gfm/lib/index.js","webpack://autogentstudio/./node_modules/mdast-util-gfm/lib/index.js","webpack://autogentstudio/./src/components/views/atoms.tsx","webpack://autogentstudio/./src/components/views/gallery/store.tsx","webpack://autogentstudio/./src/components/views/gallery/utils.ts","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://autogentstudio/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/chevron-up.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/maximize-2.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/square-pen.js"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nexport function pickClosable(context) {\n  if (!context) {\n    return undefined;\n  }\n  return {\n    closable: context.closable,\n    closeIcon: context.closeIcon\n  };\n}\n/** Convert `closable` and `closeIcon` to config object */\nfunction useClosableConfig(closableCollection) {\n  const {\n    closable,\n    closeIcon\n  } = closableCollection || {};\n  return React.useMemo(() => {\n    if (\n    // If `closable`, whatever rest be should be true\n    !closable && (closable === false || closeIcon === false || closeIcon === null)) {\n      return false;\n    }\n    if (closable === undefined && closeIcon === undefined) {\n      return null;\n    }\n    let closableConfig = {\n      closeIcon: typeof closeIcon !== 'boolean' && closeIcon !== null ? closeIcon : undefined\n    };\n    if (closable && typeof closable === 'object') {\n      closableConfig = Object.assign(Object.assign({}, closableConfig), closable);\n    }\n    return closableConfig;\n  }, [closable, closeIcon]);\n}\n/**\n * Assign object without `undefined` field. Will skip if is `false`.\n * This helps to handle both closableConfig or false\n */\nfunction assignWithoutUndefined() {\n  const target = {};\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n  objList.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        if (obj[key] !== undefined) {\n          target[key] = obj[key];\n        }\n      });\n    }\n  });\n  return target;\n}\n/** Use same object to support `useMemo` optimization */\nconst EmptyFallbackCloseCollection = {};\nexport default function useClosable(propCloseCollection, contextCloseCollection) {\n  let fallbackCloseCollection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EmptyFallbackCloseCollection;\n  // Align the `props`, `context` `fallback` to config object first\n  const propCloseConfig = useClosableConfig(propCloseCollection);\n  const contextCloseConfig = useClosableConfig(contextCloseCollection);\n  const closeBtnIsDisabled = typeof propCloseConfig !== 'boolean' ? !!(propCloseConfig === null || propCloseConfig === void 0 ? void 0 : propCloseConfig.disabled) : false;\n  const mergedFallbackCloseCollection = React.useMemo(() => Object.assign({\n    closeIcon: /*#__PURE__*/React.createElement(CloseOutlined, null)\n  }, fallbackCloseCollection), [fallbackCloseCollection]);\n  // Use fallback logic to fill the config\n  const mergedClosableConfig = React.useMemo(() => {\n    // ================ Props First ================\n    // Skip if prop is disabled\n    if (propCloseConfig === false) {\n      return false;\n    }\n    if (propCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig, propCloseConfig);\n    }\n    // =============== Context Second ==============\n    // Skip if context is disabled\n    if (contextCloseConfig === false) {\n      return false;\n    }\n    if (contextCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig);\n    }\n    // ============= Fallback Default ==============\n    return !mergedFallbackCloseCollection.closable ? false : mergedFallbackCloseCollection;\n  }, [propCloseConfig, contextCloseConfig, mergedFallbackCloseCollection]);\n  // Calculate the final closeIcon\n  return React.useMemo(() => {\n    if (mergedClosableConfig === false) {\n      return [false, null, closeBtnIsDisabled];\n    }\n    const {\n      closeIconRender\n    } = mergedFallbackCloseCollection;\n    const {\n      closeIcon\n    } = mergedClosableConfig;\n    let mergedCloseIcon = closeIcon;\n    if (mergedCloseIcon !== null && mergedCloseIcon !== undefined) {\n      // Wrap the closeIcon if needed\n      if (closeIconRender) {\n        mergedCloseIcon = closeIconRender(closeIcon);\n      }\n      // Wrap the closeIcon with aria props\n      const ariaProps = pickAttrs(mergedClosableConfig, true);\n      if (Object.keys(ariaProps).length) {\n        mergedCloseIcon = /*#__PURE__*/React.isValidElement(mergedCloseIcon) ? (/*#__PURE__*/React.cloneElement(mergedCloseIcon, ariaProps)) : (/*#__PURE__*/React.createElement(\"span\", Object.assign({}, ariaProps), mergedCloseIcon));\n      }\n    }\n    return [true, mergedCloseIcon, closeBtnIsDisabled];\n  }, [mergedClosableConfig, mergedFallbackCloseCollection]);\n}","import { unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Row-Shared ==============================\nconst genGridRowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      minWidth: 0,\n      '&::before, &::after': {\n        display: 'flex'\n      },\n      '&-no-wrap': {\n        flexWrap: 'nowrap'\n      },\n      // The origin of the X-axis\n      '&-start': {\n        justifyContent: 'flex-start'\n      },\n      // The center of the X-axis\n      '&-center': {\n        justifyContent: 'center'\n      },\n      // The opposite of the X-axis\n      '&-end': {\n        justifyContent: 'flex-end'\n      },\n      '&-space-between': {\n        justifyContent: 'space-between'\n      },\n      '&-space-around': {\n        justifyContent: 'space-around'\n      },\n      '&-space-evenly': {\n        justifyContent: 'space-evenly'\n      },\n      // Align at the top\n      '&-top': {\n        alignItems: 'flex-start'\n      },\n      // Align at the center\n      '&-middle': {\n        alignItems: 'center'\n      },\n      '&-bottom': {\n        alignItems: 'flex-end'\n      }\n    }\n  };\n};\n// ============================== Col-Shared ==============================\nconst genGridColStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      position: 'relative',\n      maxWidth: '100%',\n      // Prevent columns from collapsing when empty\n      minHeight: 1\n    }\n  };\n};\nconst genLoopGridColumnsStyle = (token, sizeCls) => {\n  const {\n    prefixCls,\n    componentCls,\n    gridColumns\n  } = token;\n  const gridColumnsStyle = {};\n  for (let i = gridColumns; i >= 0; i--) {\n    if (i === 0) {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'none'\n      };\n      gridColumnsStyle[`${componentCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: 0\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: 0\n      };\n    } else {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = [\n      // https://github.com/ant-design/ant-design/issues/44456\n      // Form set `display: flex` on Col which will override `display: block`.\n      // Let's get it from css variable to support override.\n      {\n        ['--ant-display']: 'block',\n        // Fallback to display if variable not support\n        display: 'block'\n      }, {\n        display: 'var(--ant-display)',\n        flex: `0 0 ${i / gridColumns * 100}%`,\n        maxWidth: `${i / gridColumns * 100}%`\n      }];\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: i\n      };\n    }\n  }\n  // Flex CSS Var\n  gridColumnsStyle[`${componentCls}${sizeCls}-flex`] = {\n    flex: `var(--${prefixCls}${sizeCls}-flex)`\n  };\n  return gridColumnsStyle;\n};\nconst genGridStyle = (token, sizeCls) => genLoopGridColumnsStyle(token, sizeCls);\nconst genGridMediaStyle = (token, screenSize, sizeCls) => ({\n  [`@media (min-width: ${unit(screenSize)})`]: Object.assign({}, genGridStyle(token, sizeCls))\n});\nexport const prepareRowComponentToken = () => ({});\nexport const prepareColComponentToken = () => ({});\n// ============================== Export ==============================\nexport const useRowStyle = genStyleHooks('Grid', genGridRowStyle, prepareRowComponentToken);\nexport const getMediaSize = token => {\n  const mediaSizesMap = {\n    xs: token.screenXSMin,\n    sm: token.screenSMMin,\n    md: token.screenMDMin,\n    lg: token.screenLGMin,\n    xl: token.screenXLMin,\n    xxl: token.screenXXLMin\n  };\n  return mediaSizesMap;\n};\nexport const useColStyle = genStyleHooks('Grid', token => {\n  const gridToken = mergeToken(token, {\n    gridColumns: 24 // Row is divided into 24 parts in Grid\n  });\n  const gridMediaSizesMap = getMediaSize(gridToken);\n  delete gridMediaSizesMap.xs;\n  return [genGridColStyle(gridToken), genGridStyle(gridToken, ''), genGridStyle(gridToken, '-xs'), Object.keys(gridMediaSizesMap).map(key => genGridMediaStyle(gridToken, gridMediaSizesMap[key], `-${key}`)).reduce((pre, cur) => Object.assign(Object.assign({}, pre), cur), {})];\n}, prepareColComponentToken);","\"use client\";\n\nimport * as React from 'react';\nimport useState from \"rc-util/es/hooks/useState\";\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\nfunction isThenable(thing) {\n  return !!(thing === null || thing === void 0 ? void 0 : thing.then);\n}\nconst ActionButton = props => {\n  const {\n    type,\n    children,\n    prefixCls,\n    buttonProps,\n    close,\n    autoFocus,\n    emitEvent,\n    isSilent,\n    quitOnNullishReturnValue,\n    actionFn\n  } = props;\n  const clickedRef = React.useRef(false);\n  const buttonRef = React.useRef(null);\n  const [loading, setLoading] = useState(false);\n  const onInternalClose = function () {\n    close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n  };\n  React.useEffect(() => {\n    let timeoutId = null;\n    if (autoFocus) {\n      timeoutId = setTimeout(() => {\n        var _a;\n        (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventScroll: true\n        });\n      });\n    }\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n  const handlePromiseOnOk = returnValueOfOnOk => {\n    if (!isThenable(returnValueOfOnOk)) {\n      return;\n    }\n    setLoading(true);\n    returnValueOfOnOk.then(function () {\n      setLoading(false, true);\n      onInternalClose.apply(void 0, arguments);\n      clickedRef.current = false;\n    }, e => {\n      // See: https://github.com/ant-design/ant-design/issues/6183\n      setLoading(false, true);\n      clickedRef.current = false;\n      // Do not throw if is `await` mode\n      if (isSilent === null || isSilent === void 0 ? void 0 : isSilent()) {\n        return;\n      }\n      return Promise.reject(e);\n    });\n  };\n  const onClick = e => {\n    if (clickedRef.current) {\n      return;\n    }\n    clickedRef.current = true;\n    if (!actionFn) {\n      onInternalClose();\n      return;\n    }\n    let returnValueOfOnOk;\n    if (emitEvent) {\n      returnValueOfOnOk = actionFn(e);\n      if (quitOnNullishReturnValue && !isThenable(returnValueOfOnOk)) {\n        clickedRef.current = false;\n        onInternalClose(e);\n        return;\n      }\n    } else if (actionFn.length) {\n      returnValueOfOnOk = actionFn(close);\n      // https://github.com/ant-design/ant-design/issues/23358\n      clickedRef.current = false;\n    } else {\n      returnValueOfOnOk = actionFn();\n      if (!isThenable(returnValueOfOnOk)) {\n        onInternalClose();\n        return;\n      }\n    }\n    handlePromiseOnOk(returnValueOfOnOk);\n  };\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(type), {\n    onClick: onClick,\n    loading: loading,\n    prefixCls: prefixCls\n  }, buttonProps, {\n    ref: buttonRef\n  }), children);\n};\nexport default ActionButton;","import React from 'react';\nexport const ModalContext = /*#__PURE__*/React.createContext({});\nexport const {\n  Provider: ModalContextProvider\n} = ModalContext;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport ActionButton from '../../_util/ActionButton';\nimport { ModalContext } from '../context';\nconst ConfirmCancelBtn = () => {\n  const {\n    autoFocusButton,\n    cancelButtonProps,\n    cancelTextLocale,\n    isSilent,\n    mergedOkCancel,\n    rootPrefixCls,\n    close,\n    onCancel,\n    onConfirm\n  } = useContext(ModalContext);\n  return mergedOkCancel ? (/*#__PURE__*/React.createElement(ActionButton, {\n    isSilent: isSilent,\n    actionFn: onCancel,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    autoFocus: autoFocusButton === 'cancel',\n    buttonProps: cancelButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, cancelTextLocale)) : null;\n};\nexport default ConfirmCancelBtn;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport ActionButton from '../../_util/ActionButton';\nimport { ModalContext } from '../context';\nconst ConfirmOkBtn = () => {\n  const {\n    autoFocusButton,\n    close,\n    isSilent,\n    okButtonProps,\n    rootPrefixCls,\n    okTextLocale,\n    okType,\n    onConfirm,\n    onOk\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(ActionButton, {\n    isSilent: isSilent,\n    type: okType || 'primary',\n    actionFn: onOk,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(true);\n    },\n    autoFocus: autoFocusButton === 'ok',\n    buttonProps: okButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, okTextLocale);\n};\nexport default ConfirmOkBtn;","import * as React from 'react';\nexport var RefContext = /*#__PURE__*/React.createContext({});","// =============================== Motion ===============================\nexport function getMotionName(prefixCls, transitionName, animationName) {\n  var motionName = transitionName;\n  if (!motionName && animationName) {\n    motionName = \"\".concat(prefixCls, \"-\").concat(animationName);\n  }\n  return motionName;\n}\n\n// =============================== Offset ===============================\nfunction getScroll(w, top) {\n  var ret = w[\"page\".concat(top ? 'Y' : 'X', \"Offset\")];\n  var method = \"scroll\".concat(top ? 'Top' : 'Left');\n  if (typeof ret !== 'number') {\n    var d = w.document;\n    ret = d.documentElement[method];\n    if (typeof ret !== 'number') {\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\nexport function offset(el) {\n  var rect = el.getBoundingClientRect();\n  var pos = {\n    left: rect.left,\n    top: rect.top\n  };\n  var doc = el.ownerDocument;\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  pos.top += getScroll(w, true);\n  return pos;\n}","import * as React from 'react';\nexport default /*#__PURE__*/React.memo(function (_ref) {\n  var children = _ref.children;\n  return children;\n}, function (_, _ref2) {\n  var shouldUpdate = _ref2.shouldUpdate;\n  return !shouldUpdate;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport classNames from 'classnames';\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport React, { useMemo, useRef } from 'react';\nimport { RefContext } from \"../../context\";\nimport MemoChildren from \"./MemoChildren\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nvar sentinelStyle = {\n  width: 0,\n  height: 0,\n  overflow: 'hidden',\n  outline: 'none'\n};\nvar entityStyle = {\n  outline: 'none'\n};\nvar Panel = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    title = props.title,\n    ariaId = props.ariaId,\n    footer = props.footer,\n    closable = props.closable,\n    closeIcon = props.closeIcon,\n    onClose = props.onClose,\n    children = props.children,\n    bodyStyle = props.bodyStyle,\n    bodyProps = props.bodyProps,\n    modalRender = props.modalRender,\n    onMouseDown = props.onMouseDown,\n    onMouseUp = props.onMouseUp,\n    holderRef = props.holderRef,\n    visible = props.visible,\n    forceRender = props.forceRender,\n    width = props.width,\n    height = props.height,\n    modalClassNames = props.classNames,\n    modalStyles = props.styles;\n\n  // ================================= Refs =================================\n  var _React$useContext = React.useContext(RefContext),\n    panelRef = _React$useContext.panel;\n  var mergedRef = useComposeRef(holderRef, panelRef);\n  var sentinelStartRef = useRef();\n  var sentinelEndRef = useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _sentinelStartRef$cur;\n        (_sentinelStartRef$cur = sentinelStartRef.current) === null || _sentinelStartRef$cur === void 0 || _sentinelStartRef$cur.focus({\n          preventScroll: true\n        });\n      },\n      changeActive: function changeActive(next) {\n        var _document = document,\n          activeElement = _document.activeElement;\n        if (next && activeElement === sentinelEndRef.current) {\n          sentinelStartRef.current.focus({\n            preventScroll: true\n          });\n        } else if (!next && activeElement === sentinelStartRef.current) {\n          sentinelEndRef.current.focus({\n            preventScroll: true\n          });\n        }\n      }\n    };\n  });\n\n  // ================================ Style =================================\n  var contentStyle = {};\n  if (width !== undefined) {\n    contentStyle.width = width;\n  }\n  if (height !== undefined) {\n    contentStyle.height = height;\n  }\n  // ================================ Render ================================\n  var footerNode = footer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-footer\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.footer),\n    style: _objectSpread({}, modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.footer)\n  }, footer) : null;\n  var headerNode = title ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-header\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.header),\n    style: _objectSpread({}, modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.header)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-title\"),\n    id: ariaId\n  }, title)) : null;\n  var closableObj = useMemo(function () {\n    if (_typeof(closable) === 'object' && closable !== null) {\n      return closable;\n    }\n    if (closable) {\n      return {\n        closeIcon: closeIcon !== null && closeIcon !== void 0 ? closeIcon : /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-close-x\")\n        })\n      };\n    }\n    return {};\n  }, [closable, closeIcon, prefixCls]);\n  var ariaProps = pickAttrs(closableObj, true);\n  var closeBtnIsDisabled = _typeof(closable) === 'object' && closable.disabled;\n  var closerNode = closable ? /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"button\",\n    onClick: onClose,\n    \"aria-label\": \"Close\"\n  }, ariaProps, {\n    className: \"\".concat(prefixCls, \"-close\"),\n    disabled: closeBtnIsDisabled\n  }), closableObj.closeIcon) : null;\n  var content = /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-content\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.content),\n    style: modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.content\n  }, closerNode, headerNode, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-body\"), modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.body),\n    style: _objectSpread(_objectSpread({}, bodyStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.body)\n  }, bodyProps), children), footerNode);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: \"dialog-element\",\n    role: \"dialog\",\n    \"aria-labelledby\": title ? ariaId : null,\n    \"aria-modal\": \"true\",\n    ref: mergedRef,\n    style: _objectSpread(_objectSpread({}, style), contentStyle),\n    className: classNames(prefixCls, className),\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: sentinelStartRef,\n    tabIndex: 0,\n    style: entityStyle\n  }, /*#__PURE__*/React.createElement(MemoChildren, {\n    shouldUpdate: visible || forceRender\n  }, modalRender ? modalRender(content) : content)), /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEndRef,\n    style: sentinelStyle\n  }));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Panel.displayName = 'Panel';\n}\nexport default Panel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport { offset } from \"../../util\";\nimport Panel from \"./Panel\";\nvar Content = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n    title = props.title,\n    style = props.style,\n    className = props.className,\n    visible = props.visible,\n    forceRender = props.forceRender,\n    destroyOnClose = props.destroyOnClose,\n    motionName = props.motionName,\n    ariaId = props.ariaId,\n    onVisibleChanged = props.onVisibleChanged,\n    mousePosition = props.mousePosition;\n  var dialogRef = useRef();\n\n  // ============================= Style ==============================\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    transformOrigin = _React$useState2[0],\n    setTransformOrigin = _React$useState2[1];\n  var contentStyle = {};\n  if (transformOrigin) {\n    contentStyle.transformOrigin = transformOrigin;\n  }\n  function onPrepare() {\n    var elementOffset = offset(dialogRef.current);\n    setTransformOrigin(mousePosition && (mousePosition.x || mousePosition.y) ? \"\".concat(mousePosition.x - elementOffset.left, \"px \").concat(mousePosition.y - elementOffset.top, \"px\") : '');\n  }\n\n  // ============================= Render =============================\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    onVisibleChanged: onVisibleChanged,\n    onAppearPrepare: onPrepare,\n    onEnterPrepare: onPrepare,\n    forceRender: forceRender,\n    motionName: motionName,\n    removeOnLeave: destroyOnClose,\n    ref: dialogRef\n  }, function (_ref, motionRef) {\n    var motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(Panel, _extends({}, props, {\n      ref: ref,\n      title: title,\n      ariaId: ariaId,\n      prefixCls: prefixCls,\n      holderRef: motionRef,\n      style: _objectSpread(_objectSpread(_objectSpread({}, motionStyle), style), contentStyle),\n      className: classNames(className, motionClassName)\n    }));\n  });\n});\nContent.displayName = 'Content';\nexport default Content;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nvar Mask = function Mask(props) {\n  var prefixCls = props.prefixCls,\n    style = props.style,\n    visible = props.visible,\n    maskProps = props.maskProps,\n    motionName = props.motionName,\n    className = props.className;\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    key: \"mask\",\n    visible: visible,\n    motionName: motionName,\n    leavedClassName: \"\".concat(prefixCls, \"-mask-hidden\")\n  }, function (_ref, ref) {\n    var motionClassName = _ref.className,\n      motionStyle = _ref.style;\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      ref: ref,\n      style: _objectSpread(_objectSpread({}, motionStyle), style),\n      className: classNames(\"\".concat(prefixCls, \"-mask\"), motionClassName, className)\n    }, maskProps));\n  });\n};\nexport default Mask;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport contains from \"rc-util/es/Dom/contains\";\nimport useId from \"rc-util/es/hooks/useId\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { getMotionName } from \"../util\";\nimport Content from \"./Content\";\nimport Mask from \"./Mask\";\nimport { warning } from \"rc-util/es/warning\";\nvar Dialog = function Dialog(props) {\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-dialog' : _props$prefixCls,\n    zIndex = props.zIndex,\n    _props$visible = props.visible,\n    visible = _props$visible === void 0 ? false : _props$visible,\n    _props$keyboard = props.keyboard,\n    keyboard = _props$keyboard === void 0 ? true : _props$keyboard,\n    _props$focusTriggerAf = props.focusTriggerAfterClose,\n    focusTriggerAfterClose = _props$focusTriggerAf === void 0 ? true : _props$focusTriggerAf,\n    wrapStyle = props.wrapStyle,\n    wrapClassName = props.wrapClassName,\n    wrapProps = props.wrapProps,\n    onClose = props.onClose,\n    afterOpenChange = props.afterOpenChange,\n    afterClose = props.afterClose,\n    transitionName = props.transitionName,\n    animation = props.animation,\n    _props$closable = props.closable,\n    closable = _props$closable === void 0 ? true : _props$closable,\n    _props$mask = props.mask,\n    mask = _props$mask === void 0 ? true : _props$mask,\n    maskTransitionName = props.maskTransitionName,\n    maskAnimation = props.maskAnimation,\n    _props$maskClosable = props.maskClosable,\n    maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable,\n    maskStyle = props.maskStyle,\n    maskProps = props.maskProps,\n    rootClassName = props.rootClassName,\n    modalClassNames = props.classNames,\n    modalStyles = props.styles;\n  if (process.env.NODE_ENV !== 'production') {\n    ['wrapStyle', 'bodyStyle', 'maskStyle'].forEach(function (prop) {\n      // (prop in props) && console.error(`Warning: ${prop} is deprecated, please use styles instead.`)\n      warning(!(prop in props), \"\".concat(prop, \" is deprecated, please use styles instead.\"));\n    });\n    if ('wrapClassName' in props) {\n      warning(false, \"wrapClassName is deprecated, please use classNames instead.\");\n    }\n  }\n  var lastOutSideActiveElementRef = useRef();\n  var wrapperRef = useRef();\n  var contentRef = useRef();\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n\n  // ========================== Init ==========================\n  var ariaId = useId();\n  function saveLastOutSideActiveElementRef() {\n    if (!contains(wrapperRef.current, document.activeElement)) {\n      lastOutSideActiveElementRef.current = document.activeElement;\n    }\n  }\n  function focusDialogContent() {\n    if (!contains(wrapperRef.current, document.activeElement)) {\n      var _contentRef$current;\n      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus();\n    }\n  }\n\n  // ========================= Events =========================\n  function onDialogVisibleChanged(newVisible) {\n    // Try to focus\n    if (newVisible) {\n      focusDialogContent();\n    } else {\n      // Clean up scroll bar & focus back\n      setAnimatedVisible(false);\n      if (mask && lastOutSideActiveElementRef.current && focusTriggerAfterClose) {\n        try {\n          lastOutSideActiveElementRef.current.focus({\n            preventScroll: true\n          });\n        } catch (e) {\n          // Do nothing\n        }\n        lastOutSideActiveElementRef.current = null;\n      }\n\n      // Trigger afterClose only when change visible from true to false\n      if (animatedVisible) {\n        afterClose === null || afterClose === void 0 || afterClose();\n      }\n    }\n    afterOpenChange === null || afterOpenChange === void 0 || afterOpenChange(newVisible);\n  }\n  function onInternalClose(e) {\n    onClose === null || onClose === void 0 || onClose(e);\n  }\n\n  // >>> Content\n  var contentClickRef = useRef(false);\n  var contentTimeoutRef = useRef();\n\n  // We need record content click incase content popup out of dialog\n  var onContentMouseDown = function onContentMouseDown() {\n    clearTimeout(contentTimeoutRef.current);\n    contentClickRef.current = true;\n  };\n  var onContentMouseUp = function onContentMouseUp() {\n    contentTimeoutRef.current = setTimeout(function () {\n      contentClickRef.current = false;\n    });\n  };\n\n  // >>> Wrapper\n  // Close only when element not on dialog\n  var onWrapperClick = null;\n  if (maskClosable) {\n    onWrapperClick = function onWrapperClick(e) {\n      if (contentClickRef.current) {\n        contentClickRef.current = false;\n      } else if (wrapperRef.current === e.target) {\n        onInternalClose(e);\n      }\n    };\n  }\n  function onWrapperKeyDown(e) {\n    if (keyboard && e.keyCode === KeyCode.ESC) {\n      e.stopPropagation();\n      onInternalClose(e);\n      return;\n    }\n\n    // keep focus inside dialog\n    if (visible && e.keyCode === KeyCode.TAB) {\n      contentRef.current.changeActive(!e.shiftKey);\n    }\n  }\n\n  // ========================= Effect =========================\n  useEffect(function () {\n    if (visible) {\n      setAnimatedVisible(true);\n      saveLastOutSideActiveElementRef();\n    }\n  }, [visible]);\n\n  // Remove direct should also check the scroll bar update\n  useEffect(function () {\n    return function () {\n      clearTimeout(contentTimeoutRef.current);\n    };\n  }, []);\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread({\n    zIndex: zIndex\n  }, wrapStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.wrapper), {}, {\n    display: !animatedVisible ? 'none' : null\n  });\n\n  // ========================= Render =========================\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"\".concat(prefixCls, \"-root\"), rootClassName)\n  }, pickAttrs(props, {\n    data: true\n  })), /*#__PURE__*/React.createElement(Mask, {\n    prefixCls: prefixCls,\n    visible: mask && visible,\n    motionName: getMotionName(prefixCls, maskTransitionName, maskAnimation),\n    style: _objectSpread(_objectSpread({\n      zIndex: zIndex\n    }, maskStyle), modalStyles === null || modalStyles === void 0 ? void 0 : modalStyles.mask),\n    maskProps: maskProps,\n    className: modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.mask\n  }), /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: -1,\n    onKeyDown: onWrapperKeyDown,\n    className: classNames(\"\".concat(prefixCls, \"-wrap\"), wrapClassName, modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.wrapper),\n    ref: wrapperRef,\n    onClick: onWrapperClick,\n    style: mergedStyle\n  }, wrapProps), /*#__PURE__*/React.createElement(Content, _extends({}, props, {\n    onMouseDown: onContentMouseDown,\n    onMouseUp: onContentMouseUp,\n    ref: contentRef,\n    closable: closable,\n    ariaId: ariaId,\n    prefixCls: prefixCls,\n    visible: visible && animatedVisible,\n    onClose: onInternalClose,\n    onVisibleChanged: onDialogVisibleChanged,\n    motionName: getMotionName(prefixCls, transitionName, animation)\n  }))));\n};\nexport default Dialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport Portal from '@rc-component/portal';\nimport * as React from 'react';\nimport { RefContext } from \"./context\";\nimport Dialog from \"./Dialog\";\n// fix issue #10656\n/*\n * getContainer remarks\n * Custom container should not be return, because in the Portal component, it will remove the\n * return container element here, if the custom container is the only child of it's component,\n * like issue #10656, It will has a conflict with removeChild method in react-dom.\n * So here should add a child (div element) to custom container.\n * */\n\nvar DialogWrap = function DialogWrap(props) {\n  var visible = props.visible,\n    getContainer = props.getContainer,\n    forceRender = props.forceRender,\n    _props$destroyOnClose = props.destroyOnClose,\n    destroyOnClose = _props$destroyOnClose === void 0 ? false : _props$destroyOnClose,\n    _afterClose = props.afterClose,\n    panelRef = props.panelRef;\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n  var refContext = React.useMemo(function () {\n    return {\n      panel: panelRef\n    };\n  }, [panelRef]);\n  React.useEffect(function () {\n    if (visible) {\n      setAnimatedVisible(true);\n    }\n  }, [visible]);\n\n  // Destroy on close will remove wrapped div\n  if (!forceRender && destroyOnClose && !animatedVisible) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(RefContext.Provider, {\n    value: refContext\n  }, /*#__PURE__*/React.createElement(Portal, {\n    open: visible || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: visible || animatedVisible\n  }, /*#__PURE__*/React.createElement(Dialog, _extends({}, props, {\n    destroyOnClose: destroyOnClose,\n    afterClose: function afterClose() {\n      _afterClose === null || _afterClose === void 0 || _afterClose();\n      setAnimatedVisible(false);\n    }\n  }))));\n};\nDialogWrap.displayName = 'Dialog';\nexport default DialogWrap;","import DialogWrap from \"./DialogWrap\";\nimport Panel from \"./Dialog/Content/Panel\";\nexport { Panel };\nexport default DialogWrap;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport Button from '../../button';\nimport { ModalContext } from '../context';\nconst NormalCancelBtn = () => {\n  const {\n    cancelButtonProps,\n    cancelTextLocale,\n    onCancel\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: onCancel\n  }, cancelButtonProps), cancelTextLocale);\n};\nexport default NormalCancelBtn;","\"use client\";\n\nimport React, { useContext } from 'react';\nimport Button from '../../button';\nimport { convertLegacyProps } from '../../button/buttonHelpers';\nimport { ModalContext } from '../context';\nconst NormalOkBtn = () => {\n  const {\n    confirmLoading,\n    okButtonProps,\n    okType,\n    okTextLocale,\n    onOk\n  } = useContext(ModalContext);\n  return /*#__PURE__*/React.createElement(Button, Object.assign({}, convertLegacyProps(okType), {\n    loading: confirmLoading,\n    onClick: onOk\n  }, okButtonProps), okTextLocale);\n};\nexport default NormalOkBtn;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport { DisabledContextProvider } from '../config-provider/DisabledContext';\nimport { useLocale } from '../locale';\nimport NormalCancelBtn from './components/NormalCancelBtn';\nimport NormalOkBtn from './components/NormalOkBtn';\nimport { ModalContextProvider } from './context';\nimport { getConfirmLocale } from './locale';\nexport function renderCloseIcon(prefixCls, closeIcon) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-close-x`\n  }, closeIcon || /*#__PURE__*/React.createElement(CloseOutlined, {\n    className: `${prefixCls}-close-icon`\n  }));\n}\nexport const Footer = props => {\n  const {\n    okText,\n    okType = 'primary',\n    cancelText,\n    confirmLoading,\n    onOk,\n    onCancel,\n    okButtonProps,\n    cancelButtonProps,\n    footer\n  } = props;\n  const [locale] = useLocale('Modal', getConfirmLocale());\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (locale === null || locale === void 0 ? void 0 : locale.okText);\n  const cancelTextLocale = cancelText || (locale === null || locale === void 0 ? void 0 : locale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = {\n    confirmLoading,\n    okButtonProps,\n    cancelButtonProps,\n    okTextLocale,\n    cancelTextLocale,\n    okType,\n    onOk,\n    onCancel\n  };\n  const btnCtxValueMemo = React.useMemo(() => btnCtxValue, _toConsumableArray(Object.values(btnCtxValue)));\n  let footerNode;\n  if (typeof footer === 'function' || typeof footer === 'undefined') {\n    footerNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NormalCancelBtn, null), /*#__PURE__*/React.createElement(NormalOkBtn, null));\n    if (typeof footer === 'function') {\n      footerNode = footer(footerNode, {\n        OkBtn: NormalOkBtn,\n        CancelBtn: NormalCancelBtn\n      });\n    }\n    footerNode = /*#__PURE__*/React.createElement(ModalContextProvider, {\n      value: btnCtxValueMemo\n    }, footerNode);\n  } else {\n    footerNode = footer;\n  }\n  return /*#__PURE__*/React.createElement(DisabledContextProvider, {\n    disabled: false\n  }, footerNode);\n};","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { unit } from '@ant-design/cssinjs';\nimport { getMediaSize } from '../../grid/style';\nimport { genFocusStyle, resetComponent } from '../../style';\nimport { initFadeMotion, initZoomMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nfunction box(position) {\n  return {\n    position,\n    inset: 0\n  };\n}\nexport const genModalMaskStyle = token => {\n  const {\n    componentCls,\n    antCls\n  } = token;\n  return [{\n    [`${componentCls}-root`]: {\n      [`${componentCls}${antCls}-zoom-enter, ${componentCls}${antCls}-zoom-appear`]: {\n        // reset scale avoid mousePosition bug\n        transform: 'none',\n        opacity: 0,\n        animationDuration: token.motionDurationSlow,\n        // https://github.com/ant-design/ant-design/issues/11777\n        userSelect: 'none'\n      },\n      // https://github.com/ant-design/ant-design/issues/37329\n      // https://github.com/ant-design/ant-design/issues/40272\n      [`${componentCls}${antCls}-zoom-leave ${componentCls}-content`]: {\n        pointerEvents: 'none'\n      },\n      [`${componentCls}-mask`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        height: '100%',\n        backgroundColor: token.colorBgMask,\n        pointerEvents: 'none',\n        [`${componentCls}-hidden`]: {\n          display: 'none'\n        }\n      }),\n      [`${componentCls}-wrap`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        overflow: 'auto',\n        outline: 0,\n        WebkitOverflowScrolling: 'touch'\n      })\n    }\n  }, {\n    [`${componentCls}-root`]: initFadeMotion(token)\n  }];\n};\nconst genModalStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return [\n  // ======================== Root =========================\n  {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl'\n      },\n      [`${componentCls}-centered`]: {\n        textAlign: 'center',\n        '&::before': {\n          display: 'inline-block',\n          width: 0,\n          height: '100%',\n          verticalAlign: 'middle',\n          content: '\"\"'\n        },\n        [componentCls]: {\n          top: 0,\n          display: 'inline-block',\n          paddingBottom: 0,\n          textAlign: 'start',\n          verticalAlign: 'middle'\n        }\n      },\n      [`@media (max-width: ${token.screenSMMax}px)`]: {\n        [componentCls]: {\n          maxWidth: 'calc(100vw - 16px)',\n          margin: `${unit(token.marginXS)} auto`\n        },\n        [`${componentCls}-centered`]: {\n          [componentCls]: {\n            flex: 1\n          }\n        }\n      }\n    }\n  },\n  // ======================== Modal ========================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      pointerEvents: 'none',\n      position: 'relative',\n      top: 100,\n      width: 'auto',\n      maxWidth: `calc(100vw - ${unit(token.calc(token.margin).mul(2).equal())})`,\n      margin: '0 auto',\n      paddingBottom: token.paddingLG,\n      [`${componentCls}-title`]: {\n        margin: 0,\n        color: token.titleColor,\n        fontWeight: token.fontWeightStrong,\n        fontSize: token.titleFontSize,\n        lineHeight: token.titleLineHeight,\n        wordWrap: 'break-word'\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative',\n        backgroundColor: token.contentBg,\n        backgroundClip: 'padding-box',\n        border: 0,\n        borderRadius: token.borderRadiusLG,\n        boxShadow: token.boxShadow,\n        pointerEvents: 'auto',\n        padding: token.contentPadding\n      },\n      [`${componentCls}-close`]: Object.assign({\n        position: 'absolute',\n        top: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        insetInlineEnd: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        zIndex: token.calc(token.zIndexPopupBase).add(10).equal(),\n        padding: 0,\n        color: token.modalCloseIconColor,\n        fontWeight: token.fontWeightStrong,\n        lineHeight: 1,\n        textDecoration: 'none',\n        background: 'transparent',\n        borderRadius: token.borderRadiusSM,\n        width: token.modalCloseBtnSize,\n        height: token.modalCloseBtnSize,\n        border: 0,\n        outline: 0,\n        cursor: 'pointer',\n        transition: `color ${token.motionDurationMid}, background-color ${token.motionDurationMid}`,\n        '&-x': {\n          display: 'flex',\n          fontSize: token.fontSizeLG,\n          fontStyle: 'normal',\n          lineHeight: unit(token.modalCloseBtnSize),\n          justifyContent: 'center',\n          textTransform: 'none',\n          textRendering: 'auto'\n        },\n        '&:disabled': {\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          color: token.modalCloseIconHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          textDecoration: 'none'\n        },\n        '&:active': {\n          backgroundColor: token.colorBgTextActive\n        }\n      }, genFocusStyle(token)),\n      [`${componentCls}-header`]: {\n        color: token.colorText,\n        background: token.headerBg,\n        borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`,\n        marginBottom: token.headerMarginBottom,\n        padding: token.headerPadding,\n        borderBottom: token.headerBorderBottom\n      },\n      [`${componentCls}-body`]: {\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        wordWrap: 'break-word',\n        padding: token.bodyPadding,\n        [`${componentCls}-body-skeleton`]: {\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: `${unit(token.margin)} auto`\n        }\n      },\n      [`${componentCls}-footer`]: {\n        textAlign: 'end',\n        background: token.footerBg,\n        marginTop: token.footerMarginTop,\n        padding: token.footerPadding,\n        borderTop: token.footerBorderTop,\n        borderRadius: token.footerBorderRadius,\n        [`> ${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginInlineStart: token.marginXS\n        }\n      },\n      [`${componentCls}-open`]: {\n        overflow: 'hidden'\n      }\n    })\n  },\n  // ======================== Pure =========================\n  {\n    [`${componentCls}-pure-panel`]: {\n      top: 'auto',\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      [`${componentCls}-content,\n          ${componentCls}-body,\n          ${componentCls}-confirm-body-wrapper`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto'\n      },\n      [`${componentCls}-confirm-body`]: {\n        marginBottom: 'auto'\n      }\n    }\n  }];\n};\nconst genRTLStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl',\n        [`${componentCls}-confirm-body`]: {\n          direction: 'rtl'\n        }\n      }\n    }\n  };\n};\nconst genResponsiveWidthStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const gridMediaSizesMap = getMediaSize(token);\n  delete gridMediaSizesMap.xs;\n  const responsiveStyles = Object.keys(gridMediaSizesMap).map(key => ({\n    [`@media (min-width: ${unit(gridMediaSizesMap[key])})`]: {\n      width: `var(--${componentCls.replace('.', '')}-${key}-width)`\n    }\n  }));\n  return {\n    [`${componentCls}-root`]: {\n      [componentCls]: [{\n        width: `var(--${componentCls.replace('.', '')}-xs-width)`\n      }].concat(_toConsumableArray(responsiveStyles))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const headerPaddingVertical = token.padding;\n  const headerFontSize = token.fontSizeHeading5;\n  const headerLineHeight = token.lineHeightHeading5;\n  const modalToken = mergeToken(token, {\n    modalHeaderHeight: token.calc(token.calc(headerLineHeight).mul(headerFontSize).equal()).add(token.calc(headerPaddingVertical).mul(2).equal()).equal(),\n    modalFooterBorderColorSplit: token.colorSplit,\n    modalFooterBorderStyle: token.lineType,\n    modalFooterBorderWidth: token.lineWidth,\n    modalCloseIconColor: token.colorIcon,\n    modalCloseIconHoverColor: token.colorIconHover,\n    modalCloseBtnSize: token.controlHeight,\n    modalConfirmIconSize: token.fontHeight,\n    modalTitleHeight: token.calc(token.titleFontSize).mul(token.titleLineHeight).equal()\n  });\n  return modalToken;\n};\nexport const prepareComponentToken = token => ({\n  footerBg: 'transparent',\n  headerBg: token.colorBgElevated,\n  titleLineHeight: token.lineHeightHeading5,\n  titleFontSize: token.fontSizeHeading5,\n  contentBg: token.colorBgElevated,\n  titleColor: token.colorTextHeading,\n  // internal\n  contentPadding: token.wireframe ? 0 : `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n  headerPadding: token.wireframe ? `${unit(token.padding)} ${unit(token.paddingLG)}` : 0,\n  headerBorderBottom: token.wireframe ? `${unit(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  headerMarginBottom: token.wireframe ? 0 : token.marginXS,\n  bodyPadding: token.wireframe ? token.paddingLG : 0,\n  footerPadding: token.wireframe ? `${unit(token.paddingXS)} ${unit(token.padding)}` : 0,\n  footerBorderTop: token.wireframe ? `${unit(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  footerBorderRadius: token.wireframe ? `0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}` : 0,\n  footerMarginTop: token.wireframe ? 0 : token.marginSM,\n  confirmBodyPadding: token.wireframe ? `${unit(token.padding * 2)} ${unit(token.padding * 2)} ${unit(token.paddingLG)}` : 0,\n  confirmIconMarginInlineEnd: token.wireframe ? token.margin : token.marginSM,\n  confirmBtnsMarginTop: token.wireframe ? token.marginLG : token.marginSM\n});\nexport default genStyleHooks('Modal', token => {\n  const modalToken = prepareToken(token);\n  return [genModalStyle(modalToken), genRTLStyle(modalToken), genModalMaskStyle(modalToken), initZoomMotion(modalToken, 'zoom'), genResponsiveWidthStyle(modalToken)];\n}, prepareComponentToken, {\n  unitless: {\n    titleLineHeight: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport Dialog from 'rc-dialog';\nimport ContextIsolator from '../_util/ContextIsolator';\nimport useClosable, { pickClosable } from '../_util/hooks/useClosable';\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport { canUseDocElement } from '../_util/styleChecker';\nimport { devUseWarning } from '../_util/warning';\nimport zIndexContext from '../_util/zindexContext';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Skeleton from '../skeleton';\nimport { usePanelRef } from '../watermark/context';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nlet mousePosition;\n// ref: https://github.com/ant-design/ant-design/issues/15795\nconst getClickPosition = e => {\n  mousePosition = {\n    x: e.pageX,\n    y: e.pageY\n  };\n  // 100ms 内发生过点击事件，则从点击位置动画展示\n  // 否则直接 zoom 展示\n  // 这样可以兼容非点击方式展开\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n// 只有点击事件支持从鼠标位置动画展开\nif (canUseDocElement()) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\nconst Modal = props => {\n  var _a;\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction,\n    modal: modalContext\n  } = React.useContext(ConfigContext);\n  const handleCancel = e => {\n    const {\n      onCancel\n    } = props;\n    onCancel === null || onCancel === void 0 ? void 0 : onCancel(e);\n  };\n  const handleOk = e => {\n    const {\n      onOk\n    } = props;\n    onOk === null || onOk === void 0 ? void 0 : onOk(e);\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    [['visible', 'open'], ['bodyStyle', 'styles.body'], ['maskStyle', 'styles.mask']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      open,\n      wrapClassName,\n      centered,\n      getContainer,\n      focusTriggerAfterClose = true,\n      style,\n      // Deprecated\n      visible,\n      width = 520,\n      footer,\n      classNames: modalClassNames,\n      styles: modalStyles,\n      children,\n      loading\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"open\", \"wrapClassName\", \"centered\", \"getContainer\", \"focusTriggerAfterClose\", \"style\", \"visible\", \"width\", \"footer\", \"classNames\", \"styles\", \"children\", \"loading\"]);\n  const prefixCls = getPrefixCls('modal', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const wrapClassNameExtended = classNames(wrapClassName, {\n    [`${prefixCls}-centered`]: !!centered,\n    [`${prefixCls}-wrap-rtl`]: direction === 'rtl'\n  });\n  const dialogFooter = footer !== null && !loading ? (/*#__PURE__*/React.createElement(Footer, Object.assign({}, props, {\n    onOk: handleOk,\n    onCancel: handleCancel\n  }))) : null;\n  const [mergedClosable, mergedCloseIcon, closeBtnIsDisabled] = useClosable(pickClosable(props), pickClosable(modalContext), {\n    closable: true,\n    closeIcon: /*#__PURE__*/React.createElement(CloseOutlined, {\n      className: `${prefixCls}-close-icon`\n    }),\n    closeIconRender: icon => renderCloseIcon(prefixCls, icon)\n  });\n  // ============================ Refs ============================\n  // Select `ant-modal-content` by `panelRef`\n  const panelRef = usePanelRef(`.${prefixCls}-content`);\n  // ============================ zIndex ============================\n  const [zIndex, contextZIndex] = useZIndex('Modal', restProps.zIndex);\n  // =========================== Width ============================\n  const [numWidth, responsiveWidth] = React.useMemo(() => {\n    if (width && typeof width === 'object') {\n      return [undefined, width];\n    }\n    return [width, undefined];\n  }, [width]);\n  const responsiveWidthVars = React.useMemo(() => {\n    const vars = {};\n    if (responsiveWidth) {\n      Object.keys(responsiveWidth).forEach(breakpoint => {\n        const breakpointWidth = responsiveWidth[breakpoint];\n        if (breakpointWidth !== undefined) {\n          vars[`--${prefixCls}-${breakpoint}-width`] = typeof breakpointWidth === 'number' ? `${breakpointWidth}px` : breakpointWidth;\n        }\n      });\n    }\n    return vars;\n  }, [responsiveWidth]);\n  // =========================== Render ===========================\n  return wrapCSSVar(/*#__PURE__*/React.createElement(ContextIsolator, {\n    form: true,\n    space: true\n  }, /*#__PURE__*/React.createElement(zIndexContext.Provider, {\n    value: contextZIndex\n  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    width: numWidth\n  }, restProps, {\n    zIndex: zIndex,\n    getContainer: getContainer === undefined ? getContextPopupContainer : getContainer,\n    prefixCls: prefixCls,\n    rootClassName: classNames(hashId, rootClassName, cssVarCls, rootCls),\n    footer: dialogFooter,\n    visible: open !== null && open !== void 0 ? open : visible,\n    mousePosition: (_a = restProps.mousePosition) !== null && _a !== void 0 ? _a : mousePosition,\n    onClose: handleCancel,\n    closable: mergedClosable ? {\n      disabled: closeBtnIsDisabled,\n      closeIcon: mergedCloseIcon\n    } : mergedClosable,\n    closeIcon: mergedCloseIcon,\n    focusTriggerAfterClose: focusTriggerAfterClose,\n    transitionName: getTransitionName(rootPrefixCls, 'zoom', props.transitionName),\n    maskTransitionName: getTransitionName(rootPrefixCls, 'fade', props.maskTransitionName),\n    className: classNames(hashId, className, modalContext === null || modalContext === void 0 ? void 0 : modalContext.className),\n    style: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.style), style), responsiveWidthVars),\n    classNames: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.classNames), modalClassNames), {\n      wrapper: classNames(wrapClassNameExtended, modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.wrapper)\n    }),\n    styles: Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.styles), modalStyles),\n    panelRef: panelRef\n  }), loading ? (/*#__PURE__*/React.createElement(Skeleton, {\n    active: true,\n    title: false,\n    paragraph: {\n      rows: 4\n    },\n    className: `${prefixCls}-body-skeleton`\n  })) : children))));\n};\nexport default Modal;","import canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { isStyleSupport } from \"rc-util/es/Dom/styleChecker\";\nexport const canUseDocElement = () => canUseDom() && window.document.documentElement;\nexport { isStyleSupport };","// Style as confirm component\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { clearFix } from '../../style';\nimport { genSubStyleComponent } from '../../theme/internal';\n// ============================= Confirm ==============================\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS,\n        // https://github.com/ant-design/ant-design/issues/51912\n        maxWidth: `calc(100% - ${unit(token.marginSM)})`\n      },\n      // https://github.com/ant-design/ant-design/issues/48159\n      [`${token.iconCls} + ${confirmComponentCls}-paragraph`]: {\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n});","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport classNames from 'classnames';\nimport { CONTAINER_MAX_OFFSET } from '../_util/hooks/useZIndex';\nimport { getTransitionName } from '../_util/motion';\nimport { devUseWarning } from '../_util/warning';\nimport ConfigProvider from '../config-provider';\nimport { useLocale } from '../locale';\nimport useToken from '../theme/useToken';\nimport CancelBtn from './components/ConfirmCancelBtn';\nimport OkBtn from './components/ConfirmOkBtn';\nimport { ModalContextProvider } from './context';\nimport Modal from './Modal';\nimport Confirm from './style/confirm';\nexport function ConfirmContent(props) {\n  const {\n      prefixCls,\n      icon,\n      okText,\n      cancelText,\n      confirmPrefixCls,\n      type,\n      okCancel,\n      footer,\n      // Legacy for static function usage\n      locale: staticLocale\n    } = props,\n    resetProps = __rest(props, [\"prefixCls\", \"icon\", \"okText\", \"cancelText\", \"confirmPrefixCls\", \"type\", \"okCancel\", \"footer\", \"locale\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof icon === 'string' && icon.length > 2), 'breaking', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`) : void 0;\n  }\n  // Icon\n  let mergedIcon = icon;\n  // 支持传入{ icon: null }来隐藏`Modal.confirm`默认的Icon\n  if (!icon && icon !== null) {\n    switch (type) {\n      case 'info':\n        mergedIcon = /*#__PURE__*/React.createElement(InfoCircleFilled, null);\n        break;\n      case 'success':\n        mergedIcon = /*#__PURE__*/React.createElement(CheckCircleFilled, null);\n        break;\n      case 'error':\n        mergedIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n        break;\n      default:\n        mergedIcon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null);\n    }\n  }\n  // 默认为 true，保持向下兼容\n  const mergedOkCancel = okCancel !== null && okCancel !== void 0 ? okCancel : type === 'confirm';\n  const autoFocusButton = props.autoFocusButton === null ? false : props.autoFocusButton || 'ok';\n  const [locale] = useLocale('Modal');\n  const mergedLocale = staticLocale || locale;\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (mergedOkCancel ? mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.okText : mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.justOkText);\n  const cancelTextLocale = cancelText || (mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = Object.assign({\n    autoFocusButton,\n    cancelTextLocale,\n    okTextLocale,\n    mergedOkCancel\n  }, resetProps);\n  const btnCtxValueMemo = React.useMemo(() => btnCtxValue, _toConsumableArray(Object.values(btnCtxValue)));\n  // ====================== Footer Origin Node ======================\n  const footerOriginNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CancelBtn, null), /*#__PURE__*/React.createElement(OkBtn, null));\n  const hasTitle = props.title !== undefined && props.title !== null;\n  const bodyCls = `${confirmPrefixCls}-body`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-body-wrapper`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(bodyCls, {\n      [`${bodyCls}-has-title`]: hasTitle\n    })\n  }, mergedIcon, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-paragraph`\n  }, hasTitle && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${confirmPrefixCls}-title`\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-content`\n  }, props.content))), footer === undefined || typeof footer === 'function' ? (/*#__PURE__*/React.createElement(ModalContextProvider, {\n    value: btnCtxValueMemo\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${confirmPrefixCls}-btns`\n  }, typeof footer === 'function' ? footer(footerOriginNode, {\n    OkBtn,\n    CancelBtn\n  }) : footerOriginNode))) : footer, /*#__PURE__*/React.createElement(Confirm, {\n    prefixCls: prefixCls\n  }));\n}\nconst ConfirmDialog = props => {\n  const {\n    close,\n    zIndex,\n    maskStyle,\n    direction,\n    prefixCls,\n    wrapClassName,\n    rootPrefixCls,\n    bodyStyle,\n    closable = false,\n    onConfirm,\n    styles\n  } = props;\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Modal');\n    [['visible', 'open'], ['bodyStyle', 'styles.body'], ['maskStyle', 'styles.mask']].forEach(_ref => {\n      let [deprecatedName, newName] = _ref;\n      warning.deprecated(!(deprecatedName in props), deprecatedName, newName);\n    });\n  }\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  const width = props.width || 416;\n  const style = props.style || {};\n  const mask = props.mask === undefined ? true : props.mask;\n  // 默认为 false，保持旧版默认行为\n  const maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n  const classString = classNames(confirmPrefixCls, `${confirmPrefixCls}-${props.type}`, {\n    [`${confirmPrefixCls}-rtl`]: direction === 'rtl'\n  }, props.className);\n  // ========================= zIndex =========================\n  const [, token] = useToken();\n  const mergedZIndex = React.useMemo(() => {\n    if (zIndex !== undefined) {\n      return zIndex;\n    }\n    // Static always use max zIndex\n    return token.zIndexPopupBase + CONTAINER_MAX_OFFSET;\n  }, [zIndex, token]);\n  // ========================= Render =========================\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    className: classString,\n    wrapClassName: classNames({\n      [`${confirmPrefixCls}-centered`]: !!props.centered\n    }, wrapClassName),\n    onCancel: () => {\n      close === null || close === void 0 ? void 0 : close({\n        triggerCancel: true\n      });\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    title: \"\",\n    footer: null,\n    transitionName: getTransitionName(rootPrefixCls || '', 'zoom', props.transitionName),\n    maskTransitionName: getTransitionName(rootPrefixCls || '', 'fade', props.maskTransitionName),\n    mask: mask,\n    maskClosable: maskClosable,\n    style: style,\n    styles: Object.assign({\n      body: bodyStyle,\n      mask: maskStyle\n    }, styles),\n    width: width,\n    zIndex: mergedZIndex,\n    closable: closable\n  }), /*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n    confirmPrefixCls: confirmPrefixCls\n  })));\n};\nconst ConfirmDialogWrapper = props => {\n  const {\n    rootPrefixCls,\n    iconPrefixCls,\n    direction,\n    theme\n  } = props;\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: iconPrefixCls,\n    direction: direction,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ConfirmDialog.displayName = 'ConfirmDialog';\n  ConfirmDialogWrapper.displayName = 'ConfirmDialogWrapper';\n}\nexport default ConfirmDialogWrapper;","const destroyFns = [];\nexport default destroyFns;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useContext } from 'react';\nimport warning from '../_util/warning';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport { getReactRender } from '../config-provider/UnstableContext';\nimport ConfirmDialog from './ConfirmDialog';\nimport destroyFns from './destroyFns';\nimport { getConfirmLocale } from './locale';\nlet defaultRootPrefixCls = '';\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\nconst ConfirmDialogWrapper = props => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    getContainer,\n    direction\n  } = props;\n  const runtimeLocale = getConfirmLocale();\n  const config = useContext(ConfigContext);\n  const rootPrefixCls = getRootPrefixCls() || config.getPrefixCls();\n  // because Modal.config set rootPrefixCls, which is different from other components\n  const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n  let mergedGetContainer = getContainer;\n  if (mergedGetContainer === false) {\n    mergedGetContainer = undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Static method not support `getContainer` to be `false` since it do not have context env.') : void 0;\n    }\n  }\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props, {\n    rootPrefixCls: rootPrefixCls,\n    prefixCls: prefixCls,\n    iconPrefixCls: config.iconPrefixCls,\n    theme: config.theme,\n    direction: direction !== null && direction !== void 0 ? direction : config.direction,\n    locale: (_b = (_a = config.locale) === null || _a === void 0 ? void 0 : _a.Modal) !== null && _b !== void 0 ? _b : runtimeLocale,\n    getContainer: mergedGetContainer\n  }));\n};\nexport default function confirm(config) {\n  const global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('Modal');\n  }\n  const container = document.createDocumentFragment();\n  let currentConfig = Object.assign(Object.assign({}, config), {\n    close,\n    open: true\n  });\n  let timeoutId;\n  let reactUnmount;\n  function destroy() {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = config.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [config, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n    reactUnmount();\n  }\n  function render(props) {\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    timeoutId = setTimeout(() => {\n      const rootPrefixCls = global.getPrefixCls(undefined, getRootPrefixCls());\n      const iconPrefixCls = global.getIconPrefixCls();\n      const theme = global.getTheme();\n      const dom = /*#__PURE__*/React.createElement(ConfirmDialogWrapper, Object.assign({}, props));\n      const reactRender = getReactRender();\n      reactUnmount = reactRender(/*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        theme: theme\n      }, global.holderRender ? global.holderRender(dom) : dom), container);\n    });\n  }\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = Object.assign(Object.assign({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        // @ts-ignore\n        destroy.apply(this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    render(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = Object.assign(Object.assign({}, currentConfig), configUpdate);\n    }\n    render(currentConfig);\n  }\n  render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n}\nexport function withWarn(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'confirm'\n  });\n}\nexport function modalGlobalConfig(_ref) {\n  let {\n    rootPrefixCls\n  } = _ref;\n  process.env.NODE_ENV !== \"production\" ? warning(false, 'Modal', 'Modal.config is deprecated. Please use ConfigProvider.config instead.') : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Panel } from 'rc-dialog';\nimport { withPureRenderTheme } from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport { ConfirmContent } from './ConfirmDialog';\nimport { Footer, renderCloseIcon } from './shared';\nimport useStyle from './style';\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      closeIcon,\n      closable,\n      type,\n      title,\n      children,\n      footer\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"closeIcon\", \"closable\", \"type\", \"title\", \"children\", \"footer\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const rootPrefixCls = getPrefixCls();\n  const prefixCls = customizePrefixCls || getPrefixCls('modal');\n  const rootCls = useCSSVarCls(rootPrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  // Choose target props by confirm mark\n  let additionalProps = {};\n  if (type) {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : false,\n      title: '',\n      footer: '',\n      children: (/*#__PURE__*/React.createElement(ConfirmContent, Object.assign({}, props, {\n        prefixCls: prefixCls,\n        confirmPrefixCls: confirmPrefixCls,\n        rootPrefixCls: rootPrefixCls,\n        content: children\n      })))\n    };\n  } else {\n    additionalProps = {\n      closable: closable !== null && closable !== void 0 ? closable : true,\n      title,\n      footer: footer !== null && /*#__PURE__*/React.createElement(Footer, Object.assign({}, props)),\n      children\n    };\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(Panel, Object.assign({\n    prefixCls: prefixCls,\n    className: classNames(hashId, `${prefixCls}-pure-panel`, type && confirmPrefixCls, type && `${confirmPrefixCls}-${type}`, className, cssVarCls, rootCls)\n  }, restProps, {\n    closeIcon: renderCloseIcon(prefixCls, closeIcon),\n    closable: closable\n  }, additionalProps)));\n};\nexport default withPureRenderTheme(PurePanel);","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport defaultLocale from '../../locale/en_US';\nimport useLocale from '../../locale/useLocale';\nimport ConfirmDialog from '../ConfirmDialog';\nconst HookModal = (_a, ref) => {\n  var _b;\n  var {\n      afterClose: hookAfterClose,\n      config\n    } = _a,\n    restProps = __rest(_a, [\"afterClose\", \"config\"]);\n  const [open, setOpen] = React.useState(true);\n  const [innerConfig, setInnerConfig] = React.useState(config);\n  const {\n    direction,\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('modal');\n  const rootPrefixCls = getPrefixCls();\n  const afterClose = () => {\n    var _a;\n    hookAfterClose();\n    (_a = innerConfig.afterClose) === null || _a === void 0 ? void 0 : _a.call(innerConfig);\n  };\n  const close = function () {\n    var _a;\n    setOpen(false);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = innerConfig.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [innerConfig, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    destroy: close,\n    update: newConfig => {\n      setInnerConfig(originConfig => Object.assign(Object.assign({}, originConfig), newConfig));\n    }\n  }));\n  const mergedOkCancel = (_b = innerConfig.okCancel) !== null && _b !== void 0 ? _b : innerConfig.type === 'confirm';\n  const [contextLocale] = useLocale('Modal', defaultLocale.Modal);\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({\n    prefixCls: prefixCls,\n    rootPrefixCls: rootPrefixCls\n  }, innerConfig, {\n    close: close,\n    open: open,\n    afterClose: afterClose,\n    okText: innerConfig.okText || (mergedOkCancel ? contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.okText : contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.justOkText),\n    direction: innerConfig.direction || direction,\n    cancelText: innerConfig.cancelText || (contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.cancelText)\n  }, restProps));\n};\nexport default /*#__PURE__*/React.forwardRef(HookModal);","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport usePatchElement from '../../_util/hooks/usePatchElement';\nimport { withConfirm, withError, withInfo, withSuccess, withWarn } from '../confirm';\nimport destroyFns from '../destroyFns';\nimport HookModal from './HookModal';\nlet uuid = 0;\nconst ElementsHolder = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef((_props, ref) => {\n  const [elements, patchElement] = usePatchElement();\n  React.useImperativeHandle(ref, () => ({\n    patchElement\n  }), []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, elements);\n}));\nfunction useModal() {\n  const holderRef = React.useRef(null);\n  // ========================== Effect ==========================\n  const [actionQueue, setActionQueue] = React.useState([]);\n  React.useEffect(() => {\n    if (actionQueue.length) {\n      const cloneQueue = _toConsumableArray(actionQueue);\n      cloneQueue.forEach(action => {\n        action();\n      });\n      setActionQueue([]);\n    }\n  }, [actionQueue]);\n  // =========================== Hook ===========================\n  const getConfirmFunc = React.useCallback(withFunc => function hookConfirm(config) {\n    var _a;\n    uuid += 1;\n    const modalRef = /*#__PURE__*/React.createRef();\n    // Proxy to promise with `onClose`\n    let resolvePromise;\n    const promise = new Promise(resolve => {\n      resolvePromise = resolve;\n    });\n    let silent = false;\n    let closeFunc;\n    const modal = /*#__PURE__*/React.createElement(HookModal, {\n      key: `modal-${uuid}`,\n      config: withFunc(config),\n      ref: modalRef,\n      afterClose: () => {\n        closeFunc === null || closeFunc === void 0 ? void 0 : closeFunc();\n      },\n      isSilent: () => silent,\n      onConfirm: confirmed => {\n        resolvePromise(confirmed);\n      }\n    });\n    closeFunc = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.patchElement(modal);\n    if (closeFunc) {\n      destroyFns.push(closeFunc);\n    }\n    const instance = {\n      destroy: () => {\n        function destroyAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        if (modalRef.current) {\n          destroyAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [destroyAction]));\n        }\n      },\n      update: newConfig => {\n        function updateAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.update(newConfig);\n        }\n        if (modalRef.current) {\n          updateAction();\n        } else {\n          setActionQueue(prev => [].concat(_toConsumableArray(prev), [updateAction]));\n        }\n      },\n      then: resolve => {\n        silent = true;\n        return promise.then(resolve);\n      }\n    };\n    return instance;\n  }, []);\n  const fns = React.useMemo(() => ({\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }), []);\n  return [fns, /*#__PURE__*/React.createElement(ElementsHolder, {\n    key: \"modal-holder\",\n    ref: holderRef\n  })];\n}\nexport default useModal;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nexport default function usePatchElement() {\n  const [elements, setElements] = React.useState([]);\n  const patchElement = React.useCallback(element => {\n    // append a new element to elements (and create a new ref)\n    setElements(originElements => [].concat(_toConsumableArray(originElements), [element]));\n    // return a function that removes the new element out of elements (and create a new ref)\n    // it works a little like useEffect\n    return () => {\n      setElements(originElements => originElements.filter(ele => ele !== element));\n    };\n  }, []);\n  return [elements, patchElement];\n}","\"use client\";\n\nimport confirm, { modalGlobalConfig, withConfirm, withError, withInfo, withSuccess, withWarn } from './confirm';\nimport destroyFns from './destroyFns';\nimport OriginModal from './Modal';\nimport PurePanel from './PurePanel';\nimport useModal from './useModal';\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\nconst Modal = OriginModal;\nModal.useModal = useModal;\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    const close = destroyFns.pop();\n    if (close) {\n      close();\n    }\n  }\n};\nModal.config = modalGlobalConfig;\nModal._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [skeletonAvatarCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [skeletonInputCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [skeletonImageCls]: Object.assign(Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'middle',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [skeletonButtonCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [skeletonAvatarCls]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [skeletonTitleCls]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [skeletonParagraphCls]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [skeletonTitleCls]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [skeletonButtonCls]: {\n        width: '100%'\n      },\n      [skeletonInputCls]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonAvatar = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    shape = 'circle',\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls', 'className']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-avatar`,\n    shape: shape,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonAvatar;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nconst SkeletonImage = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${prefixCls}-image-svg`\n  }, /*#__PURE__*/React.createElement(\"title\", null, \"Image placeholder\"), /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: `${prefixCls}-image-path`\n  })))));\n};\nexport default SkeletonImage;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, children)));\n};\nexport default SkeletonNode;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst getWidth = (index, props) => {\n  const {\n    width,\n    rows = 2\n  } = props;\n  if (Array.isArray(width)) {\n    return width[index];\n  }\n  // last paragraph\n  if (rows - 1 === index) {\n    return width;\n  }\n  return undefined;\n};\nconst Paragraph = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(new Array(rows)).map((_, index) => (\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index, props)\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","\"use client\";\n\n/* eslint-disable jsx-a11y/heading-has-content */\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst Title = _ref => {\n  let {\n    prefixCls,\n    className,\n    width,\n    style\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // biome-ignore lint/a11y/useHeadingContent: HOC here\n    React.createElement(\"h3\", {\n      className: classNames(prefixCls, className),\n      style: Object.assign({\n        width\n      }, style)\n    })\n  );\n};\nexport default Title;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport SkeletonNode from './Node';\nimport Paragraph from './Paragraph';\nimport useStyle from './style';\nimport Title from './Title';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction,\n    skeleton\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, skeleton === null || skeleton === void 0 ? void 0 : skeleton.className, className, rootClassName, hashId, cssVarCls);\n    return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: Object.assign(Object.assign({}, skeleton === null || skeleton === void 0 ? void 0 : skeleton.style), style)\n    }, avatarNode, contentNode));\n  }\n  return children !== null && children !== void 0 ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","\"use client\";\n\nimport Skeleton from './Skeleton';\nexport default Skeleton;","import { Keyframes } from '@ant-design/cssinjs';\nimport { initMotion } from './motion';\nexport const fadeIn = new Keyframes('antFadeIn', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\nexport const fadeOut = new Keyframes('antFadeOut', {\n  '0%': {\n    opacity: 1\n  },\n  '100%': {\n    opacity: 0\n  }\n});\nexport const initFadeMotion = function (token) {\n  let sameLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const {\n    antCls\n  } = token;\n  const motionCls = `${antCls}-fade`;\n  const sameLevelPrefix = sameLevel ? '&' : '';\n  return [initMotion(motionCls, fadeIn, fadeOut, token.motionDurationMid, sameLevel), {\n    [`\n        ${sameLevelPrefix}${motionCls}-enter,\n        ${sameLevelPrefix}${motionCls}-appear\n      `]: {\n      opacity: 0,\n      animationTimingFunction: 'linear'\n    },\n    [`${sameLevelPrefix}${motionCls}-leave`]: {\n      animationTimingFunction: 'linear'\n    }\n  }];\n};","import * as React from 'react';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nfunction voidFunc() {}\nconst WatermarkContext = /*#__PURE__*/React.createContext({\n  add: voidFunc,\n  remove: voidFunc\n});\nexport function usePanelRef(panelSelector) {\n  const watermark = React.useContext(WatermarkContext);\n  const panelEleRef = React.useRef(null);\n  const panelRef = useEvent(ele => {\n    if (ele) {\n      const innerContentEle = panelSelector ? ele.querySelector(panelSelector) : ele;\n      watermark.add(innerContentEle);\n      panelEleRef.current = innerContentEle;\n    } else {\n      watermark.remove(panelEleRef.current);\n    }\n  });\n  return panelRef;\n}\nexport default WatermarkContext;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import React, { memo, useState } from \"react\";\nimport {\n  ArrowDown,\n  ArrowUp,\n  ChevronDown,\n  ChevronUp,\n  Fullscreen,\n  Loader2,\n  Maximize2,\n  Minimize2,\n  X,\n} from \"lucide-react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Tooltip } from \"antd\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const LoadingIndicator = ({ size = 16 }: { size: number }) => (\n  <div className=\"inline-flex items-center gap-2 text-accent   mr-2\">\n    <Loader2 size={size} className=\"animate-spin\" />\n  </div>\n);\n\nexport const LoadingDots = ({ size = 8 }) => {\n  return (\n    <span className=\"inline-flex items-center gap-2\">\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n        }}\n      />\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n          animationDelay: \"0.2s\",\n        }}\n      />\n      <span\n        className=\"bg-accent rounded-full animate-bounce\"\n        style={{\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: \"0.6s\",\n          animationDelay: \"0.4s\",\n        }}\n      />\n    </span>\n  );\n};\n\n// import { memo, useState } from 'react';\n// import ReactMarkdown from 'react-markdown';\n// import { Minimize2, Maximize2, ArrowsMaximize, X } from 'lucide-react';\n// import { Tooltip } from 'antd';\n\nfunction safeJsonStringify(input: any): string {\n  if (typeof input === \"object\" && input !== null) {\n    return JSON.stringify(input);\n  }\n  return input;\n}\n\nexport const TruncatableText = memo(\n  ({\n    content = \"\",\n    isJson = false,\n    className = \"\",\n    jsonThreshold = 1000,\n    textThreshold = 500,\n    showFullscreen = true,\n  }: {\n    content: string;\n    isJson?: boolean;\n    className?: string;\n    jsonThreshold?: number;\n    textThreshold?: number;\n    showFullscreen?: boolean;\n  }) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isFullscreen, setIsFullscreen] = useState(false);\n    const threshold = isJson ? jsonThreshold : textThreshold;\n    content = safeJsonStringify(content) + \"\";\n    const shouldTruncate = content.length > threshold;\n\n    const toggleExpand = (e: React.MouseEvent) => {\n      setIsExpanded(!isExpanded);\n      e.stopPropagation();\n    };\n\n    const displayContent =\n      shouldTruncate && !isExpanded\n        ? content.slice(0, threshold) + \"...\"\n        : content;\n    const proseClassName =\n      \" dark:prose-invert prose-table:border-hidden prose-td:border-t prose-th:border-b prose-ul:list-disc prose-sm prose-ol:list-decimal \";\n    return (\n      <div className=\"relative\">\n        <div\n          className={`\n            transition-[max-height,opacity] overflow-auto scroll  duration-500 ease-in-out\n            ${\n              shouldTruncate && !isExpanded\n                ? \"max-h-[300px]\"\n                : \"max-h-[10000px]\"\n            }\n            ${className}\n          `}\n        >\n          <ReactMarkdown\n            className={\n              isExpanded ? `mt-4 text-sm text-primary ${proseClassName}` : \"\"\n            }\n            remarkPlugins={[remarkGfm]}\n          >\n            {displayContent}\n          </ReactMarkdown>\n          {shouldTruncate && !isExpanded && (\n            <div className=\"absolute bottom-0 left-0 right-0 h-24 bg-gradient-to-t from-secondary to-transparent opacity-20\" />\n          )}\n        </div>\n\n        {shouldTruncate && (\n          <div className=\"mt-2 flex items-center justify-end gap-2\">\n            <Tooltip title={isExpanded ? \"Show less\" : \"Show more\"}>\n              <button\n                type=\"button\"\n                onClick={toggleExpand}\n                className=\"inline-flex items-center justify-center p-2 rounded bg-secondary text-primary hover:text-accent hover:scale-105 transition-all duration-300 z-10\"\n                aria-label={isExpanded ? \"Show less\" : \"Show more\"}\n              >\n                {isExpanded ? (\n                  <ChevronUp size={18} />\n                ) : (\n                  <ChevronDown size={18} />\n                )}\n              </button>\n            </Tooltip>\n\n            {showFullscreen && (\n              <Tooltip title=\"Fullscreen\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsFullscreen(true)}\n                  className=\"inline-flex items-center justify-center p-2 rounded bg-secondary text-primary hover:text-accent hover:scale-105 transition-all duration-300 z-10\"\n                  aria-label=\"Toggle fullscreen\"\n                >\n                  <Maximize2 size={18} />\n                </button>\n              </Tooltip>\n            )}\n          </div>\n        )}\n\n        {isFullscreen && (\n          <div\n            className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center\"\n            onClick={() => setIsFullscreen(false)}\n          >\n            <div\n              className=\"relative bg-secondary scroll w-full h-full md:w-4/5 md:h-4/5 md:rounded-lg p-8 overflow-auto\"\n              style={{ opacity: 0.95 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Tooltip title=\"Close\">\n                <button\n                  onClick={() => setIsFullscreen(false)}\n                  className=\"absolute top-4 right-4 p-2 rounded-full bg-black/50 hover:bg-black/70 text-primary transition-colors\"\n                  aria-label=\"Close fullscreen view\"\n                >\n                  <X size={24} />\n                </button>\n              </Tooltip>\n              <div className={`mt-8 text-base text-primary ${proseClassName}`}>\n                {isJson ? (\n                  <pre className=\"whitespace-pre-wrap\">{content}</pre>\n                ) : (\n                  <ReactMarkdown\n                    className=\"text-primary\"\n                    remarkPlugins={[remarkGfm]}\n                  >\n                    {content}\n                  </ReactMarkdown>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nconst FullScreenImage: React.FC<{\n  src: string;\n  alt: string;\n  onClose: () => void;\n}> = ({ src, alt, onClose }) => {\n  return (\n    <div\n      className=\"fixed inset-0 bg-black/80 z-50 flex items-center justify-center\"\n      onClick={onClose}\n    >\n      <button\n        onClick={onClose}\n        className=\"absolute top-4 right-4 p-2 rounded-full bg-black/50 hover:bg-black/70 text-white transition-colors\"\n        aria-label=\"Close fullscreen image\"\n      >\n        <X size={24} />\n      </button>\n      <img\n        src={src}\n        alt={alt}\n        className=\"max-h-[90vh] max-w-[90vw] object-contain rounded-lg\"\n        onClick={(e) => e.stopPropagation()}\n      />\n    </div>\n  );\n};\n\nexport const ClickableImage: React.FC<{\n  src: string;\n  alt: string;\n  className?: string;\n}> = ({ src, alt, className = \"\" }) => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  return (\n    <>\n      <img\n        src={src}\n        alt={alt}\n        className={`${className} cursor-pointer rounded hover:opacity-90 transition-opacity`}\n        onClick={() => setIsFullScreen(true)}\n      />\n      {isFullScreen && (\n        <FullScreenImage\n          src={src}\n          alt={alt}\n          onClose={() => setIsFullScreen(false)}\n        />\n      )}\n    </>\n  );\n};\n\n// dateUtils.ts\nexport function getRelativeTimeString(date: string | number | Date): string {\n  const now = new Date();\n  const past = new Date(date);\n  const diffInMs = now.getTime() - past.getTime();\n\n  const diffInSeconds = Math.floor(diffInMs / 1000);\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n  const diffInMonths = Math.floor(diffInDays / 30);\n  const diffInYears = Math.floor(diffInDays / 365);\n\n  if (diffInSeconds < 60) {\n    return \"just now\";\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} ${diffInMinutes === 1 ? \"minute\" : \"minutes\"} ago`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours} ${diffInHours === 1 ? \"hour\" : \"hours\"} ago`;\n  } else if (diffInDays < 30) {\n    return `${diffInDays} ${diffInDays === 1 ? \"day\" : \"days\"} ago`;\n  } else if (diffInMonths < 12) {\n    return `${diffInMonths} ${diffInMonths === 1 ? \"month\" : \"months\"} ago`;\n  } else {\n    return `${diffInYears} ${diffInYears === 1 ? \"year\" : \"years\"} ago`;\n  }\n}\n","import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { Gallery } from \"./types\";\nimport {\n  AgentConfig,\n  Component,\n  ModelConfig,\n  TeamConfig,\n  TerminationConfig,\n  ToolConfig,\n} from \"../../types/datamodel\";\nimport { defaultGallery } from \"./utils\";\n\ninterface GalleryStore {\n  galleries: Gallery[];\n  defaultGalleryId: string;\n  selectedGalleryId: string | null;\n\n  addGallery: (gallery: Gallery) => void;\n  updateGallery: (id: string, gallery: Partial<Gallery>) => void;\n  removeGallery: (id: string) => void;\n  setDefaultGallery: (id: string) => void;\n  selectGallery: (id: string) => void;\n  getDefaultGallery: () => Gallery;\n  getSelectedGallery: () => Gallery | null;\n  syncGallery: (id: string) => Promise<void>;\n  getLastSyncTime: (id: string) => string | null;\n  getGalleryComponents: () => {\n    teams: Component<TeamConfig>[];\n    components: {\n      agents: Component<AgentConfig>[];\n      models: Component<ModelConfig>[];\n      tools: Component<ToolConfig>[];\n      terminations: Component<TerminationConfig>[];\n    };\n  };\n}\n\nexport const useGalleryStore = create<GalleryStore>()(\n  persist(\n    (set, get) => ({\n      galleries: [defaultGallery],\n      defaultGalleryId: defaultGallery.id,\n      selectedGalleryId: defaultGallery.id,\n\n      addGallery: (gallery) =>\n        set((state) => {\n          if (state.galleries.find((g) => g.id === gallery.id)) return state;\n          return {\n            galleries: [gallery, ...state.galleries],\n            defaultGalleryId: state.defaultGalleryId || gallery.id,\n            selectedGalleryId: state.selectedGalleryId || gallery.id,\n          };\n        }),\n\n      updateGallery: (id, updates) =>\n        set((state) => ({\n          galleries: state.galleries.map((gallery) =>\n            gallery.id === id\n              ? {\n                  ...gallery,\n                  ...updates,\n                  metadata: {\n                    ...gallery.metadata,\n                    ...updates.metadata,\n                    updated_at: new Date().toISOString(),\n                  },\n                }\n              : gallery\n          ),\n        })),\n\n      removeGallery: (id) =>\n        set((state) => {\n          if (state.galleries.length <= 1) return state;\n\n          const newGalleries = state.galleries.filter((g) => g.id !== id);\n          const updates: Partial<GalleryStore> = {\n            galleries: newGalleries,\n          };\n\n          if (id === state.defaultGalleryId) {\n            updates.defaultGalleryId = newGalleries[0].id;\n          }\n\n          if (id === state.selectedGalleryId) {\n            updates.selectedGalleryId = newGalleries[0].id;\n          }\n\n          return updates;\n        }),\n\n      setDefaultGallery: (id) =>\n        set((state) => {\n          const gallery = state.galleries.find((g) => g.id === id);\n          if (!gallery) return state;\n          return { defaultGalleryId: id };\n        }),\n\n      selectGallery: (id) =>\n        set((state) => {\n          const gallery = state.galleries.find((g) => g.id === id);\n          if (!gallery) return state;\n          return { selectedGalleryId: id };\n        }),\n\n      getDefaultGallery: () => {\n        const { galleries, defaultGalleryId } = get();\n        return galleries.find((g) => g.id === defaultGalleryId)!;\n      },\n\n      getSelectedGallery: () => {\n        const { galleries, selectedGalleryId } = get();\n        if (!selectedGalleryId) return null;\n        return galleries.find((g) => g.id === selectedGalleryId) || null;\n      },\n\n      syncGallery: async (id) => {\n        const gallery = get().galleries.find((g) => g.id === id);\n        if (!gallery?.url) return;\n\n        try {\n          const response = await fetch(gallery.url);\n          const remoteGallery = await response.json();\n\n          get().updateGallery(id, {\n            ...remoteGallery,\n            id, // preserve local id\n            metadata: {\n              ...remoteGallery.metadata,\n              lastSynced: new Date().toISOString(),\n            },\n          });\n        } catch (error) {\n          console.error(\"Failed to sync gallery:\", error);\n          throw error;\n        }\n      },\n\n      getLastSyncTime: (id) => {\n        const gallery = get().galleries.find((g) => g.id === id);\n        return gallery?.metadata.lastSynced ?? null;\n      },\n\n      getGalleryComponents: () => {\n        const defaultGallery = get().getDefaultGallery();\n        return {\n          teams: defaultGallery.components.teams,\n          components: {\n            agents: defaultGallery.components.agents,\n            models: defaultGallery.components.models,\n            tools: defaultGallery.components.tools,\n            terminations: defaultGallery.components.terminations,\n          },\n        };\n      },\n    }),\n    {\n      name: \"gallery-storage-v9\",\n    }\n  )\n);\n","import { Gallery } from \"./types\";\n\n// Load and parse the gallery JSON file\nconst loadGalleryFromJson = (): Gallery => {\n  try {\n    // You can adjust the path to your JSON file as needed\n    const galleryJson = require(\"./default_gallery.json\");\n    return galleryJson as Gallery;\n  } catch (error) {\n    console.error(\"Error loading gallery JSON:\", error);\n    throw error;\n  }\n};\n\nexport const defaultGallery: Gallery = loadGalleryFromJson();\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronUp = createLucideIcon(\"ChevronUp\", [[\"path\", { d: \"m18 15-6-6-6 6\", key: \"153udz\" }]]);\n\nexport { ChevronUp as default };\n//# sourceMappingURL=chevron-up.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\n  [\"polyline\", { points: \"15 3 21 3 21 9\", key: \"mznyad\" }],\n  [\"polyline\", { points: \"9 21 3 21 3 15\", key: \"1avn1i\" }],\n  [\"line\", { x1: \"21\", x2: \"14\", y1: \"3\", y2: \"10\", key: \"ota7mn\" }],\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\n]);\n\nexport { Maximize2 as default };\n//# sourceMappingURL=maximize-2.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst SquarePen = createLucideIcon(\"SquarePen\", [\n  [\"path\", { d: \"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1m0v6g\" }],\n  [\n    \"path\",\n    {\n      d: \"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\",\n      key: \"ohrbg2\"\n    }\n  ]\n]);\n\nexport { SquarePen as default };\n//# sourceMappingURL=square-pen.js.map\n"],"names":["pickClosable","context","closable","closeIcon","useClosableConfig","closableCollection","undefined","closableConfig","Object","assign","assignWithoutUndefined","target","_len","arguments","length","objList","Array","_key","forEach","obj","keys","key","EmptyFallbackCloseCollection","useClosable","propCloseCollection","contextCloseCollection","fallbackCloseCollection","propCloseConfig","contextCloseConfig","closeBtnIsDisabled","disabled","mergedFallbackCloseCollection","mergedClosableConfig","closeIconRender","mergedCloseIcon","ariaProps","genGridColStyle","token","componentCls","position","maxWidth","minHeight","genGridStyle","sizeCls","prefixCls","gridColumns","gridColumnsStyle","i","display","insetInlineStart","insetInlineEnd","marginInlineStart","order","flex","genLoopGridColumnsStyle","useRowStyle","flexFlow","minWidth","flexWrap","justifyContent","alignItems","getMediaSize","xs","screenXSMin","sm","screenSMMin","md","screenMDMin","lg","screenLGMin","xl","screenXLMin","xxl","screenXXLMin","useColStyle","gridToken","gridMediaSizesMap","map","screenSize","genGridMediaStyle","reduce","pre","cur","isThenable","thing","then","props","type","children","buttonProps","close","autoFocus","emitEvent","isSilent","quitOnNullishReturnValue","actionFn","clickedRef","buttonRef","loading","setLoading","useState","onInternalClose","apply","timeoutId","setTimeout","_a","current","focus","preventScroll","clearTimeout","onClick","e","returnValueOfOnOk","Promise","reject","handlePromiseOnOk","ref","ModalContext","Provider","ModalContextProvider","autoFocusButton","cancelButtonProps","cancelTextLocale","mergedOkCancel","rootPrefixCls","onCancel","onConfirm","useContext","okButtonProps","okTextLocale","okType","onOk","RefContext","getMotionName","transitionName","animationName","motionName","concat","getScroll","w","top","ret","method","d","document","documentElement","body","_ref","_","_ref2","shouldUpdate","sentinelStyle","width","height","overflow","outline","entityStyle","Panel","className","style","title","ariaId","footer","onClose","bodyStyle","bodyProps","modalRender","onMouseDown","onMouseUp","holderRef","visible","forceRender","modalClassNames","classNames","modalStyles","styles","panelRef","panel","mergedRef","sentinelStartRef","useRef","sentinelEndRef","_sentinelStartRef$cur","changeActive","next","activeElement","contentStyle","footerNode","headerNode","header","id","closableObj","useMemo","pickAttrs","closerNode","content","role","tabIndex","MemoChildren","Content","destroyOnClose","onVisibleChanged","mousePosition","dialogRef","_React$useState","_React$useState2","transformOrigin","setTransformOrigin","onPrepare","el","rect","pos","doc","elementOffset","getBoundingClientRect","left","ownerDocument","defaultView","parentWindow","x","y","onAppearPrepare","onEnterPrepare","removeOnLeave","motionRef","motionClassName","motionStyle","displayName","maskProps","leavedClassName","_props$prefixCls","zIndex","_props$visible","_props$keyboard","keyboard","_props$focusTriggerAf","focusTriggerAfterClose","wrapStyle","wrapClassName","wrapProps","afterOpenChange","afterClose","animation","_props$closable","_props$mask","mask","maskTransitionName","maskAnimation","_props$maskClosable","maskClosable","maskStyle","rootClassName","lastOutSideActiveElementRef","wrapperRef","contentRef","animatedVisible","setAnimatedVisible","useId","contentClickRef","contentTimeoutRef","onWrapperClick","useEffect","contains","mergedStyle","wrapper","data","onKeyDown","keyCode","KeyCode","ESC","stopPropagation","TAB","shiftKey","newVisible","_contentRef$current","DialogWrap","getContainer","_props$destroyOnClose","_afterClose","refContext","value","open","autoDestroy","autoLock","confirmLoading","renderCloseIcon","CloseOutlined","Footer","okText","cancelText","locale","useLocale","btnCtxValue","btnCtxValueMemo","values","OkBtn","CancelBtn","DisabledContext","box","inset","genModalMaskStyle","antCls","transform","opacity","animationDuration","motionDurationSlow","userSelect","pointerEvents","zIndexPopupBase","backgroundColor","colorBgMask","WebkitOverflowScrolling","genModalStyle","direction","textAlign","verticalAlign","paddingBottom","screenSMMax","margin","marginXS","calc","mul","equal","paddingLG","color","titleColor","fontWeight","fontWeightStrong","fontSize","titleFontSize","lineHeight","titleLineHeight","wordWrap","contentBg","backgroundClip","border","borderRadius","borderRadiusLG","boxShadow","padding","contentPadding","modalHeaderHeight","sub","modalCloseBtnSize","div","add","modalCloseIconColor","textDecoration","background","borderRadiusSM","cursor","transition","motionDurationMid","fontSizeLG","fontStyle","textTransform","textRendering","modalCloseIconHoverColor","colorBgTextHover","colorBgTextActive","colorText","headerBg","marginBottom","headerMarginBottom","headerPadding","borderBottom","headerBorderBottom","bodyPadding","footerBg","marginTop","footerMarginTop","footerPadding","borderTop","footerBorderTop","footerBorderRadius","flexDirection","genRTLStyle","genResponsiveWidthStyle","responsiveStyles","replace","prepareToken","headerPaddingVertical","headerFontSize","fontSizeHeading5","headerLineHeight","lineHeightHeading5","modalFooterBorderColorSplit","colorSplit","modalFooterBorderStyle","lineType","modalFooterBorderWidth","lineWidth","colorIcon","colorIconHover","controlHeight","modalConfirmIconSize","fontHeight","modalTitleHeight","prepareComponentToken","colorBgElevated","colorTextHeading","wireframe","paddingMD","paddingContentHorizontalLG","paddingXS","marginSM","confirmBodyPadding","confirmIconMarginInlineEnd","confirmBtnsMarginTop","marginLG","modalToken","unitless","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","getClickPosition","pageX","pageY","canUseDom","window","addEventListener","getPopupContainer","getContextPopupContainer","getPrefixCls","modal","modalContext","handleCancel","customizePrefixCls","centered","restProps","rootCls","useCSSVarCls","wrapCSSVar","hashId","cssVarCls","wrapClassNameExtended","dialogFooter","mergedClosable","icon","contextZIndex","useZIndex","numWidth","responsiveWidth","responsiveWidthVars","vars","breakpoint","breakpointWidth","ContextIsolator","form","space","active","paragraph","rows","genModalConfirmStyle","confirmComponentCls","iconCls","marginInlineEnd","rowGap","colorError","colorWarning","colorInfo","colorSuccess","ConfirmContent","confirmPrefixCls","okCancel","staticLocale","resetProps","mergedIcon","InfoCircleFilled","CheckCircleFilled","CloseCircleFilled","ExclamationCircleFilled","mergedLocale","justOkText","footerOriginNode","hasTitle","bodyCls","ConfirmDialog","classString","useToken","mergedZIndex","triggerCancel","iconPrefixCls","theme","defaultRootPrefixCls","getRootPrefixCls","_b","runtimeLocale","config","mergedGetContainer","Modal","global","container","createDocumentFragment","reactUnmount","currentConfig","destroy","args","_a2","some","param","slice","splice","render","getIconPrefixCls","getTheme","dom","reactRender","holderRender","_len2","_key2","this","push","update","configUpdate","withWarn","withInfo","withSuccess","withError","withConfirm","additionalProps","HookModal","hookAfterClose","setOpen","innerConfig","setInnerConfig","newConfig","originConfig","contextLocale","uuid","ElementsHolder","_props","elements","patchElement","setElements","element","originElements","filter","ele","usePatchElement","actionQueue","setActionQueue","action","getConfirmFunc","withFunc","modalRef","resolvePromise","promise","resolve","closeFunc","silent","confirmed","instance","destroyAction","prev","updateAction","info","success","error","warning","confirm","modalWarn","useModal","warn","destroyAll","pop","_InternalPanelDoNotUseOrYouWillBeFired","size","shape","shapeCls","sizeStyle","skeletonClsLoading","backgroundPosition","genSkeletonElementCommonSize","genSkeletonElementAvatarSize","genSkeletonColor","skeletonLoadingBackground","backgroundSize","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeightLG","controlHeightSM","genSkeletonElementInput","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","fill","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","skeletonTitleCls","skeletonParagraphCls","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","skeletonToken","gradientToColor","colorFillContent","colorFill","colorGradientEnd","marginXXS","deprecatedTokens","otherProps","omit","cls","block","viewBox","xmlns","getWidth","index","isArray","rowList","getComponentProps","prop","Skeleton","avatar","round","skeleton","hasAvatar","hasParagraph","avatarNode","contentNode","avatarProps","getAvatarBasicProps","$title","paragraphNode","titleProps","getTitleBasicProps","paragraphProps","basicProps","getParagraphBasicProps","Button","Avatar","Input","Image","Node","fadeIn","fadeOut","initFadeMotion","sameLevel","motionCls","sameLevelPrefix","voidFunc","WatermarkContext","remove","usePanelRef","panelSelector","watermark","panelEleRef","innerContentEle","querySelector","hasOwn","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","options","name","enumerable","configurable","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","deep","nameRe","nameReJsx","emptyOptions","jsx","test","re","empty","Schema","property","normal","merge","definitions","normalize","toLowerCase","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","super","mark","check","own","create","definition","properties","attributes","includes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loop","low","manifest","max","maxLength","media","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCanPlay","onCanPlayThrough","onChange","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","start","step","translate","typeMustMatch","useMap","wrap","writingSuggestions","align","aLink","archive","axis","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","operator","orient","orientation","origin","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","charAt","toUpperCase","hastToReact","point","pointStart","node","line","column","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","TypeError","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","addNode","addChildren","estree","expression","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","settings","join","padRight","padLeft","trim","styleObject","replacer","toCamel","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","Boolean","optional","toDash","$1","urlAttributes","includeImageAlt","includeHtml","items","parameters","chunkStart","unshift","SpliceBuffer","initial","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","regexCheck","markdownSpace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","disable","null","blankLine","partial","after","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","ceil","preprocess","combined","remarkParse","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","revert","subtype","suffix","contents","listItemLoose","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","createState","footnoteById","handlers","nodes","trimMarkdownSpaceStart","handle","passThrough","shallow","unknownHandler","defaultUnknownHandler","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","createTracker","move","subexit","safe","associationId","gfmFootnoteToMarkdown","firstLineBlank","indentLines","containerFlow","mapAll","mapExceptFirst","unsafe","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","checkQuote","quote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","formatHeadingAsSetext","literalWithBreak","setext","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteCallString","gfmFootnoteCall","gfmFootnoteDefinitionLabelString","gfmFootnoteDefinition","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","LoadingDots","React","animationDelay","TruncatableText","memo","_ref3","isJson","jsonThreshold","textThreshold","showFullscreen","isExpanded","setIsExpanded","isFullscreen","setIsFullscreen","threshold","shouldTruncate","displayContent","proseClassName","ReactMarkdown","Tooltip","ChevronUp","ChevronDown","Maximize2","X","FullScreenImage","_ref4","ClickableImage","_ref5","isFullScreen","setIsFullScreen","getRelativeTimeString","date","past","diffInMs","getTime","diffInSeconds","floor","diffInMinutes","diffInHours","diffInDays","diffInMonths","diffInYears","useGalleryStore","persist","galleries","defaultGallery","defaultGalleryId","selectedGalleryId","addGallery","gallery","g","_toConsumableArray","updateGallery","updates","metadata","updated_at","removeGallery","newGalleries","setDefaultGallery","selectGallery","getDefaultGallery","getSelectedGallery","syncGallery","response","fetch","remoteGallery","lastSynced","console","getLastSyncTime","_gallery$metadata$las","getGalleryComponents","teams","agents","models","tools","terminations","loadGalleryFromJson","require","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","whitespace","errorsList","msg","err","filename","m","comments","c","val","decl","decls","declarations","__importDefault","mod","__esModule","inline_style_parser_1","hasIterator","SquarePen"],"sourceRoot":""}